name: deploy to github
"on":
  workflow_dispatch: null
  push:
    branches:
      - master
    paths-ignore:
      - .rusty-hook.toml
      - "**/Makefile.toml"

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: rustup
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      #  https://www.uffizzi.com/blog/optimizing-rust-builds-for-faster-github-actions-pipelines
      # - name: Configure sccache
      #   run: |
      #       echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
      #       echo â€œSCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
      # - name: Run sccache-cache
      #   uses: mozilla-actions/sccache-action@v0.0.2
      - name: monolith?
        run: 'cargo install monolith'
      - name: markdown-to-standalone-html?
        run: |
          echo "MY_VARIABLE=debug" >> $GITHUB_OUTPUT
          markdown-to-standalone-html -h && echo "MY_VARIABLE=default" >> $GITHUB_OUTPUT
          echo "noop"
        id: md-2-html

      - name: GITHUB_OUTPUT
        run: echo "It is ${{ steps.md-2-html.outputs.MY_VARIABLE }}"

      - name: install markdown-to-standalone-html
        if: ${{ steps.md-2-html.outputs.MY_VARIABLE == 'debug' }}
        run: |
          git clone https://github.com/EdJoPaTo/markdown-to-standalone-html.git
          cd markdown-to-standalone-html
          cargo install --path .

      - name: build
        run: 'markdown-to-standalone-html render README.md > build/index.html'
      # - name: cat
      #   run: 'cat build/index.html'
      # - name: ls
      #   run: 'ls build'
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          name: build
          path: ./build
  deploy:
    #* Add a dependency to the build job
    needs: build

    #* Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      contents: read
      pages: write      #? to deploy to Pages
      id-token: write   #? to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    #* Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: build
      # - name: Deploy ðŸš€
      #   uses: JamesIves/github-pages-deploy-action@v4
      #   with:
      #     folder: build # The folder the action should deploy.
